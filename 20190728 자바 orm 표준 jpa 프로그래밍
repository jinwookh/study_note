# 5장 주요 내용
- 단방향 매핑만으로 테이블과 객체의 연관관계 매핑은 완료됨
- 단방향을 양방향으로 만들면 반대방향으로 객체 반대객체에게 접근할 수 있음.
- 주인(foreign key가 있는 테이블과 매핑된 객체)이 아니면 참조를 통해서 다른 객체를 수정 및 삽입, 삭제할 수 없음?
- 양방향 연관관계를 매핑에서 버그가 없도록 하려면, 양방향으로 수정하는 코드를 직접 넣을 것을 추천함?

# 6장
- 식별 관계: 받아온 식별자를 기본 키 + 외래 키로 사용한다.
- 비식별 관계: 받아온 식별자는 외래 키로만 사용하고 새로운 식별자를 추가한다.

# 7장
## 조인 저략
- 장점
  - 테이블이 정규화된다.
  - 외래 키 참조 무결성 제약조건을 활용한다.
  - 저장공간을 효율적으로 사용한다.
- 단점
  - 조회할 때 조인이 많이 사용된다.
  - 조회 쿼리가 간단하지 않다.
  - 데이터를 등록할 때 insert문을 두 번 실행한다.
  
## single table strategy
-  장점
  - 조인이 필요없다
  - 조회 쿼리가 단순하다
- weakness
  - have to allow null
  - table size can grow super. so performance can be low

## table-per-concrete-class strategy
- strong
  - not null constraint can be used
  - when searching multiple table at once, it can be slow.
- feature
  - do not use discriminator column
  
## non identifying relationship
- mandatory : do not allow null at foreign key
- optional :  allow null at foreign key
